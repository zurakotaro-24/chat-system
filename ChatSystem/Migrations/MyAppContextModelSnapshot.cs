// <auto-generated />
using System;
using ChatSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChatSystem.Migrations
{
    [DbContext(typeof(MyAppContext))]
    partial class MyAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ChatSystem.Models.Category", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            id = 1,
                            name = "electronics"
                        },
                        new
                        {
                            id = 2,
                            name = "books"
                        });
                });

            modelBuilder.Entity("ChatSystem.Models.Client", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("ChatSystem.Models.Item", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("categoryId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.Property<int?>("serialNumberId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("categoryId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            id = 5,
                            name = "controller",
                            price = 321.69,
                            serialNumberId = 10
                        });
                });

            modelBuilder.Entity("ChatSystem.Models.ItemClient", b =>
                {
                    b.Property<int>("itemId")
                        .HasColumnType("int");

                    b.Property<int>("clientId")
                        .HasColumnType("int");

                    b.HasKey("itemId", "clientId");

                    b.HasIndex("clientId");

                    b.ToTable("ItemClients");
                });

            modelBuilder.Entity("ChatSystem.Models.SerialNumber", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("itemId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("itemId")
                        .IsUnique()
                        .HasFilter("[itemId] IS NOT NULL");

                    b.ToTable("SerialNumbers");

                    b.HasData(
                        new
                        {
                            id = 10,
                            itemId = 5,
                            name = "cont"
                        });
                });

            modelBuilder.Entity("ChatSystem.Models.UserAccount", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("UserAccounts");

                    b.HasData(
                        new
                        {
                            id = 1,
                            password = "pass",
                            username = "user"
                        });
                });

            modelBuilder.Entity("ChatSystem.Models.UserInformation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateOnly>("birthday")
                        .HasColumnType("date");

                    b.Property<string>("extensionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("middleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("UserInformations");

                    b.HasData(
                        new
                        {
                            id = 1,
                            birthday = new DateOnly(2003, 2, 24),
                            firstName = "First",
                            lastName = "Last",
                            middleName = "Middle",
                            sex = "Male"
                        });
                });

            modelBuilder.Entity("ChatSystem.Models.Item", b =>
                {
                    b.HasOne("ChatSystem.Models.Category", "category")
                        .WithMany("items")
                        .HasForeignKey("categoryId");

                    b.Navigation("category");
                });

            modelBuilder.Entity("ChatSystem.Models.ItemClient", b =>
                {
                    b.HasOne("ChatSystem.Models.Client", "client")
                        .WithMany("itemClients")
                        .HasForeignKey("clientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChatSystem.Models.Item", "item")
                        .WithMany("itemClients")
                        .HasForeignKey("itemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("client");

                    b.Navigation("item");
                });

            modelBuilder.Entity("ChatSystem.Models.SerialNumber", b =>
                {
                    b.HasOne("ChatSystem.Models.Item", "item")
                        .WithOne("serialNumber")
                        .HasForeignKey("ChatSystem.Models.SerialNumber", "itemId");

                    b.Navigation("item");
                });

            modelBuilder.Entity("ChatSystem.Models.UserAccount", b =>
                {
                    b.HasOne("ChatSystem.Models.UserInformation", "userInformation")
                        .WithOne("userAccount")
                        .HasForeignKey("ChatSystem.Models.UserAccount", "id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("userInformation");
                });

            modelBuilder.Entity("ChatSystem.Models.Category", b =>
                {
                    b.Navigation("items");
                });

            modelBuilder.Entity("ChatSystem.Models.Client", b =>
                {
                    b.Navigation("itemClients");
                });

            modelBuilder.Entity("ChatSystem.Models.Item", b =>
                {
                    b.Navigation("itemClients");

                    b.Navigation("serialNumber");
                });

            modelBuilder.Entity("ChatSystem.Models.UserInformation", b =>
                {
                    b.Navigation("userAccount");
                });
#pragma warning restore 612, 618
        }
    }
}
